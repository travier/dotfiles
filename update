#!/usr/bin/env bash

set -u -o pipefail
# Do not exit if one command failed
# set -e
# set -x

update_container_images() {
	echo "[+] Updating container images..."
	images=(
		'quay.io/coreos/ignition-validate:release'
		'registry.fedoraproject.org/fedora:latest'
		'registry.fedoraproject.org/fedora:34'
		'quay.io/coreos/butane:release'
		'quay.io/coreos/coreos-installer:release'
		'registry.access.redhat.com/ubi8/ubi:latest'
		'registry.access.redhat.com/ubi8/ubi:8.4'
		'docker.io/digitalocean/doctl:latest'
		'docker.io/antora/antora:latest'
		'quay.io/coreos-assembler/coreos-assembler:latest'
		'quay.io/coreos-assembler/coreos-assembler:rhcos-4.8'
		'quay.io/coreos-assembler/coreos-assembler:rhcos-4.7'
		'quay.io/coreos-assembler/coreos-assembler:rhcos-4.6'
	)
	for img in "${images[@]}"; do
		podman pull "${img}"
	done
	for img in $(podman images --filter dangling=true --format "{{.ID}}"); do
		podman rmi "${img}"
	done
	echo "[+] Done"
}

update_firmwares() {
	echo "[+] Updating firmwares..."
	sudo fwupdmgr refresh
	sudo fwupdmgr update
	echo "[+] Done"
}

main() {
	local SYSTEM=false
	if [[ "${#}" -gt 0 ]]; then
		case "${1}" in
			"s"|"sy"|"sys"|"syst"|"syste"|"system")
				SYSTEM=true
				;;
		esac
		case "${1}" in
			"c"|"co"|"con"|"cont"|"conta"|"contai"|"contain"|"containe"|"container")
				update_container_images
				exit 0
				;;
		esac
		case "${1}" in
			"f"|"fi"|"fir"|"firm"|"firmw"|"firmwa"|"firmwar"|"firmware")
				update_firmwares
				exit 0
				;;
		esac
	fi

	local OSTREE=false
	if [[ -f "/run/ostree-booted" ]]; then
		OSTREE=true
	fi

	if [[ "${SYSTEM}" == true ]] && [[ "${OSTREE}" == false ]] && [[ -z "${TMUX+x}" ]]; then
		tmux attach-session -t update || tmux new-session -s update -- ~/.local/bin/+update system
		exit 0
	fi

	if [[ "${SYSTEM}" == true ]]; then
		if [[ "${OSTREE}" == true ]]; then
			echo "[+] Updating system (rpm-ostree)..."
			rpm-ostree update
		else
			echo "[+] Updating system (dnf)..."
			sudo dnf update --refresh
		fi
	fi

	echo "[+] Updating system Flatpaks..."
	flatpak --system update --assumeyes
	flatpak --system remove --unused --assumeyes

	echo "[+] Updating toolbox..."
	# 'quay.io/travier/toolbox-texlive:latest'
	images=(
		'quay.io/travier/toolbox:latest'
	)
	for img in "${images[@]}"; do
		podman pull "${img}"
		local tbx="toolbox" # TODO: keep only image name
		toolbox rm --force "${tbx}"
		toolbox create --image "${img}" "${tbx}"
	done

	echo "[+] Updating Rust crates..."
	rustup update
	toolbox run --container 'toolbox' ~/.cargo/bin/cargo install-update -a
	toolbox run --container 'toolbox' ~/.cargo/bin/cargo cache -a

	echo "[+] Done"
	if [[ -n "${TMUX+x}" ]]; then
		exec "${SHELL}"
	fi
}

main "${@}"
