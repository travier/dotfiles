[user]
	name = ""
	email = ""

[alias]
	a = add
	ap = add --patch
	b = branch --verbose
	ba = branch --all --verbose
	bc = branch --contains
	br = branch --all
	c = commit
	ca = commit --amend
	caf = "!f() { \
		if [[ ${#} -ne 2 ]]; then \
			>&2 echo \"Missing arguments, need origin URL & fork URL\"; \
		fi; \
		git clone $1; \
		local -r repo=$(basename $1); \
		pushd ${repo%.git} > /dev/null; \
		git remote add travier $2; \
		git fetch --all; \
		popd > /dev/null; \
	}; f"
	cb = checkout -b
	cf = commit --fixup
	co = checkout
	cp = checkout --patch
	cs = commit --squash
	ct = checkout --track
	cx = cherry-pick -x
	d =  diff --no-prefix
	dc = diff --no-prefix --cached
	ds = diff --no-prefix --stat
	f = fetch
	fpush = push --force-with-lease
	fa = fetch --all --prune
	fagc = fetch --all --prune --auto-gc
	g = grep -ni
	l =   log
	lp =  log --patch
	ls =  log --stat
	ll =  log --pretty=oneline
	llp = log --pretty=oneline --patch
	lls = log --pretty=oneline --stat
	lo =  log --pretty=oneline --max-count=10
	lop = log --pretty=oneline --max-count=10 --patch
	los = log --pretty=oneline --max-count=10 --stat
	lgr = log --graph --pretty=format:'%C(red)%h%Creset -%C(yellow)%d%Creset %s %C(green)(%cr) %C(bold blue)%Creset'
	lgrs =  log --graph --simplify-by-decoration --pretty=format:'%d' --all
	p = pull --ff-only
	pgm = push github master
	ph = push
	pl = pull --ff-only
	pr = pull --rebase
	pull = pull --ff-only
	pushforce = push --force-with-lease
	r = reset
	ra = rebase --abort
	rb = rebase
	rc = rebase --continue
	ri = rebase --interactive
	rp = reset --patch
	s = status --short --branch --show-stash
	sh = show
	shs = show --stat
	smi = submodule update --init
	smr = submodule update --rebase
	sp = stash --patch
	st = status --long
	stash-all = stash save --included-untracked
	tc = tag --contains
	up = remote update
	vc = verify-commit
	vch = verify-commit HEAD

[color]
	ui = true
[column]
	ui = auto
[log]
	abbrevCommit = true
	date = auto:human
	follow = true
[advice]
	pushNonFastForward = false
	statusHints = false
	commitBeforeMerge = false
	skippedCherryPicks = false
[diff]
	algorithm = histogram
	renameLimit = 2000
[init]
	defaultBranch = main
; Disabled by default as it fails when the file does not exists
; [blame]
; 	ignoreRevsFile = .git-blame-ignore-revs

[core]
	pager = delta
[delta]
	features = decorations
	syntax-theme = "Monokai Extended Bright"
[delta "decorations"]
	commit-decoration-style = bold yellow
	file-style = bold yellow ul
	file-decoration-style = none
	hunk-header-decoration-style = none
[interactive]
	diffFilter = delta --color-only

[merge]
	ff = only
	conflictstyle = diff3
[push]
	default = simple
	followTags = false
[pull]
	ff = only
[rebase]
	autosquash = true
[checkout]
	defaultRemote = origin

[transfer]
	fsckObjects = true
[fetch]
	fsckObjects = true
[receive]
	fsckObjects = true

[protocol "http"]
	allow = never
[protocol "git"]
	allow = never

[credential]
	helper = /usr/libexec/git-core/git-credential-libsecret

[gpg]
	format = ssh

[url "https://invent.kde.org/"]
	insteadOf = kde:
[url "ssh://git@invent.kde.org/"]
	pushInsteadOf = kde:
